/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.15 .\public\model\BaseModel.glb 
*/

import React, { useRef,useEffect } from 'react'
import { useGLTF,useFBX,useAnimations } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'

export function Model(props) {
  const {animation} = props
  const { nodes, materials } = useGLTF('/model/BaseModel.glb')
  const model = useRef()

  // load the animation fbx
  const {animations:greeting} =useFBX("/animations/standing_greeting.fbx")
  const {animations:onPhone} = useFBX('/animations/on_phone.fbx')
  const {animations:pointing} = useFBX('/animations/pointing.fbx')
  const {animations:idle} = useFBX('/animations/standing_idle.fbx')

  // name the animation to use it later
  greeting[0].name = "greeting"
  onPhone[0].name = "onPhone"
  pointing[0].name = "pointing"
  idle[0].name = "idle"
  
  // apply the animations to the model
  const {actions} = useAnimations([greeting[0], onPhone[0], pointing[0], idle[0]], model);

  //look at camera
  // useFrame((state)=>{
    // model.current.getObjectByName('mixamorigHead').lookAt(state.camera.position)
  // })
  // play the animation
  useEffect(()=>{
    actions[animation].reset().fadeIn(0.5).play();
    return() =>{
      actions[animation].reset().fadeOut(1);
    }
  },[animation])
  return (
    <group {...props} dispose={null} ref={model}>
      <group scale={0.015}>
        <primitive object={nodes.mixamorigHips} />
        <skinnedMesh geometry={nodes.beard.geometry} material={materials['hair.001']} skeleton={nodes.beard.skeleton} />
        <skinnedMesh geometry={nodes.body.geometry} material={materials['body.001']} skeleton={nodes.body.skeleton} />
        <skinnedMesh geometry={nodes.eyebrow.geometry} material={materials['hair.001']} skeleton={nodes.eyebrow.skeleton} />
        <skinnedMesh geometry={nodes.eyebrow001.geometry} material={materials['hair.001']} skeleton={nodes.eyebrow001.skeleton} />
        <skinnedMesh geometry={nodes.hair.geometry} material={materials['hair.001']} skeleton={nodes.hair.skeleton} />
        <skinnedMesh geometry={nodes.hair001.geometry} material={materials['hair.001']} skeleton={nodes.hair001.skeleton} />
        <skinnedMesh geometry={nodes.hair002.geometry} material={materials['hair.001']} skeleton={nodes.hair002.skeleton} />
        <skinnedMesh geometry={nodes.mouth.geometry} material={materials['black.002']} skeleton={nodes.mouth.skeleton} />
        <skinnedMesh geometry={nodes.NurbsPath.geometry} material={materials['specs.001']} skeleton={nodes.NurbsPath.skeleton} />
        <skinnedMesh geometry={nodes.pants.geometry} material={materials['pants.001']} skeleton={nodes.pants.skeleton} />
        <skinnedMesh geometry={nodes.tshirt.geometry} material={materials['tshirt.001']} skeleton={nodes.tshirt.skeleton} />
        <skinnedMesh geometry={nodes.Sphere001.geometry} material={materials['hair.001']} skeleton={nodes.Sphere001.skeleton} />
        <skinnedMesh geometry={nodes.Sphere001_1.geometry} material={materials['eye.001']} skeleton={nodes.Sphere001_1.skeleton} />
        <skinnedMesh geometry={nodes.Sphere003.geometry} material={materials['hair.001']} skeleton={nodes.Sphere003.skeleton} />
        <skinnedMesh geometry={nodes.Sphere003_1.geometry} material={materials['eye.001']} skeleton={nodes.Sphere003_1.skeleton} />
        <skinnedMesh geometry={nodes.Plane014.geometry} material={materials['tshirt.001']} skeleton={nodes.Plane014.skeleton} />
        <skinnedMesh geometry={nodes.Plane014_1.geometry} material={materials['pants.001']} skeleton={nodes.Plane014_1.skeleton} />
        <skinnedMesh geometry={nodes.Circle002.geometry} material={materials['tshirt.001']} skeleton={nodes.Circle002.skeleton} />
        <skinnedMesh geometry={nodes.Circle002_1.geometry} material={materials['specs.001']} skeleton={nodes.Circle002_1.skeleton} />
      </group>
    </group>
  )
}

useGLTF.preload('/model/BaseModel.glb')
